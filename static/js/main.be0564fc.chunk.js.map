{"version":3,"sources":["Components/searchBox/searchBox.js","Components/Card/Card.js","Components/CardList/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","type","className","onChange","Card","monster","alt","src","id","name","email","CardList","monsters","map","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,EAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACvC,OACC,uBAAOC,KAAK,SACZC,UAAU,SACVH,YAAaA,EACbI,SAAUH,KCLCI,G,MAAO,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACC,sBAAKH,UAAU,iBAAf,UACC,qBAAKI,IAAI,UAAUC,IAAG,+BAA0BF,EAAQG,GAAlC,4BACtB,mCAAMH,EAAQI,KAAd,OACA,kCAAKJ,EAAQK,MAAb,YCHUC,G,MAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACzB,OACC,qBAAKV,UAAU,YAAf,SACEU,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCkCTM,G,wDApCb,aAAc,IAAD,8BACX,gBAiBFd,aAAe,SAACe,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAc,IAKhB,EAAKjB,aAAe,EAAKA,aAAaqB,KAAlB,gBATT,E,qDAYb,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACJ,SAAUc,S,oBAO5C,WACE,MAAkCC,KAAKP,MAA/BR,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,YACZW,EAAmBhB,EAASiB,QAAO,SAAAxB,GAAO,OAAIA,EAAQI,KAAKqB,cAAcC,SAASd,EAAYa,kBAEpG,OACA,sBAAK5B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWH,YAAY,iBAAiBC,aAAc2B,KAAK3B,eAC3D,cAAC,EAAD,CAAUY,SAAUgB,W,GA/BRI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be0564fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-box.styles.css';\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n\treturn (\r\n\t\t<input type='search' \r\n\t\tclassName='search'\r\n\t\tplaceholder={placeholder}\r\n\t\tonChange={handleChange}\r\n\t\t/>\r\n\t)\r\n}\r\n","import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = ({monster}) => {\r\n\treturn (\r\n\t\t<div className='card-container'>\r\n\t\t\t<img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} />\r\n\t\t\t<h2> {monster.name} </h2>\r\n\t\t\t<p> {monster.email} </p>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport {Card} from '../Card/Card';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = ({monsters}) => {\r\n\treturn(\r\n\t\t<div className='card-list'>\r\n\t\t\t{monsters.map(monster => (\r\n\t\t\t\t\t<Card key={monster.id} monster={monster} /> \r\n\t\t\t))}\r\n\t\t</div>\r\n\t)\r\n}","import {Component} from 'react';\nimport {SearchBox} from './Components/searchBox/searchBox';\nimport {CardList} from './Components/CardList/CardList';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField : \"\",\n    };\n\n    // javscript by default doesnt set the scope of this for functions we have to explicitly tell what context it will be\n    // we will define it in constructor\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return(\n    <div className='App'>\n      <h1> Search Robots </h1>\n      <SearchBox placeholder='search monster' handleChange={this.handleChange}/>\n      <CardList monsters={filteredMonsters} />\n     </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}